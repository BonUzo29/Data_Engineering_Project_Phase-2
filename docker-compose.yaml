version: "3"
services:
  MySQL_Container:
    command:
      - mysqld
    container_name: MySQL_Container
    entrypoint:
      - docker-entrypoint.sh
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - GOSU_VERSION=1.16
      - MYSQL_MAJOR=8.0
      - MYSQL_VERSION=8.0.32-1debian11
    hostname: 09aba4839e32
    image: mysql:8.0.32-debian
    logging:
      driver: json-file
      options: {}
    networks:
      - bridge
    ports:
      - 3306:3306/tcp
      
      
      
      
      
  grafana:
    container_name: grafana
    entrypoint:
      - /run.sh
    environment:
      - PATH=/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_HOME=/usr/share/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    hostname: df5e7c7e8dcf
    image: grafana/grafana
    logging:
      driver: json-file
      options: {}
    networks:
      - bridge
    ports:
      - 3000:3000/tcp
    working_dir: /usr/share/grafana
    
    
    
    
    
    
  kafka-container:
    command:
      - /etc/kafka/server.properties
    container_name: kafka-container
    entrypoint:
      - entrypoint.sh
    environment:
      - TZ=UTC
      - KAFKA_ADVERTISED_HOST_NAME=host.docker.internal
      - KAFKA_ADVERTISED_PORT=9092
      - BROKER_ID=1
      - ZOOKEEPER_HOST=host.docker.internal
      - PATH=/opt/kafka/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - ZOOKEEPER_PORT=2181
    expose:
      - 9092/tcp
    image: ubuntu/kafka:latest
      org.opencontainers.image.ref.name: ubuntu
      org.opencontainers.image.version: 22.04
    logging:
      driver: json-file
      options: {}
    networks:
      - host
    volumes:
      - volume-STREAM-IUBH:/data_streaming_project
      
      
      
      
      
      
  phpmyadmin:
    command:
      - apache2-foreground
    container_name: phpmyadmin
    entrypoint:
      - /docker-entrypoint.sh
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - 'PHPIZE_DEPS=autoconf 		dpkg-dev 		file 		g++ 		gcc 		libc-dev 		make 		pkg-config
        		re2c'
      - PHP_INI_DIR=/usr/local/etc/php
      - APACHE_CONFDIR=/etc/apache2
      - APACHE_ENVVARS=/etc/apache2/envvars
      - 'PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'
      - 'PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE
        -D_FILE_OFFSET_BITS=64'
      - 'PHP_LDFLAGS=-Wl,-O1 -pie'
      - 'GPG_KEYS=528995BFEDFBA7191D46839EF9BA0ADA31CBD89E 39B641343D8C104B2B146DC3F9C39DC0B9698544
        F1F692238FBC1666E5A5CCD4199F9DFEF6FFBAFD'
      - PHP_VERSION=8.1.18
      - PHP_URL=https://www.php.net/distributions/php-8.1.18.tar.xz
      - PHP_ASC_URL=https://www.php.net/distributions/php-8.1.18.tar.xz.asc
      - PHP_SHA256=f3553370f8ba42729a9ce75eed17a2111d32433a43b615694f6a571b8bad0e39
      - MAX_EXECUTION_TIME=600
      - MEMORY_LIMIT=512M
      - UPLOAD_LIMIT=2048K
      - TZ=UTC
      - VERSION=5.2.1
      - SHA256=373f9599dfbd96d6fe75316d5dad189e68c305f297edf42377db9dd6b41b2557
      - URL=https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.tar.xz
    hostname: 8794bf9bf013
    image: phpmyadmin
    ipc: private
    labels:
      org.opencontainers.image.authors: 'The phpMyAdmin Team <developers@phpmyadmin.net>'
      org.opencontainers.image.description: 'Run phpMyAdmin with Alpine, Apache and
        PHP FPM.'
      org.opencontainers.image.documentation: "https://github.com/phpmyadmin/docker#readme"
      org.opencontainers.image.licenses: GPL-2.0-only
      org.opencontainers.image.source: https://github.com/phpmyadmin/docker.git
      org.opencontainers.image.title: 'Official phpMyAdmin Docker image'
      org.opencontainers.image.url: "https://github.com/phpmyadmin/docker#readme"
      org.opencontainers.image.vendor: phpMyAdmin
      org.opencontainers.image.version: 5.2.1
    links:
      - /MySQL_Container:/phpmyadmin/db
    logging:
      driver: json-file
      options: {}
    networks:
      - bridge
    ports:
      - 8085:80/tcp
    restart: always
    working_dir: /var/www/html
    
    
    
    
  
  zookeeper-container:
    command:
      - /etc/kafka/zookeeper.properties
    container_name: zookeeper-container
    entrypoint:
      - /opt/kafka/bin/zookeeper-server-start.sh
    environment:
      - TZ=UTC
      - PATH=/opt/kafka/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    hostname: 9f533e0eaa49
    image: ubuntu/zookeeper:latest
    labels:
      maintainer: 'Ubuntu Server team <ubuntu-server@lists.ubuntu.com>'
      org.opencontainers.image.ref.name: ubuntu
      org.opencontainers.image.version: 22.04
    logging:
      driver: json-file
      options: {}
    networks:
      - bridge
    ports:
      - 2181:2181/tcp
networks:
  bridge:
    external: true





pyspark-elyra:
    command:
      - start-notebook.sh
    container_name: pyspark-elyra
    entrypoint:
      - tini
      - -g
      - --
    environment:
      - PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/spark/bin
      - DEBIAN_FRONTEND=noninteractive
      - CONDA_DIR=/opt/conda
      - SHELL=/bin/bash
      - NB_USER=jovyan
      - NB_UID=1000
      - NB_GID=100
      - LC_ALL=en_US.UTF-8
      - LANG=en_US.UTF-8
      - LANGUAGE=en_US.UTF-8
      - HOME=/home/jovyan
      - XDG_CACHE_HOME=/home/jovyan/.cache/
      - APACHE_SPARK_VERSION=3.0.2
      - HADOOP_VERSION=2.7
      - JUPYTER_ENABLE_LAB=yes
      - SPARK_HOME=/usr/local/spark
      - 'SPARK_OPTS=--driver-java-options=-Xms1024M --driver-java-options=-Xmx4096M
        --driver-java-options=-Dlog4j.logLevel=info'
    hostname: 6b970de0ad51
    image: ruslanmv/pyspark-elyra:3.0.2
    labels:
      maintainer: 'Jupyter Project <jupyter@googlegroups.com>'
    logging:
      driver: json-file
      options: {}
    networks:
      - bridge
    ports:
      - 8888:8888/tcp
    stdin_open: true
    tty: true
    user: 1000
    volumes:
      - /home/project_directory:/home/jovyan/work
    working_dir: /home/jovyan
networks:
  bridge:
    external: true

